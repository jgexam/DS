#include<stdio.h>
#include<conio.h>
#include<stdlib.h>

struct Node {
	int data;
	struct Node *next;
}*front = NULL, *rear = NULL;

void enqueue();
void display();
void dequeue();

void main() {
	int choice;
	while(1) {
		clrscr();
		printf("\n1.Insert");
		printf("\n2.Display");
		printf("\n3.Delete");
		printf("\n0.Exit");
		printf("\nEnter your choice: ");
		scanf("%d", &choice);
		switch(choice) {
			case 1:
				enqueue();
				break;
			case 2:
				display();
				break;
			case 3:
				dequeue();
				break;
			case 0:
				exit(0);
			default:
				printf("\nInvalid choice");
		}
		getch();
	}
}

void enqueue() {
	struct Node *new_node;
	new_node = (struct Node *) malloc(sizeof(struct Node));
	printf("\nEnter data: ");
	scanf("%d", &new_node->data);
	new_node->next = NULL;
	if(front == NULL || rear == NULL) {
		front = rear = new_node;
	} else {
		rear->next = new_node;
		rear = new_node;
	}
}

void display() {
	struct Node *temp = front;
	if(front == NULL || rear == NULL) {
		printf("\nQueue is Empty");
	} else {
		while(temp != NULL) {
			printf("\n%d", temp->data);
			temp = temp->next;
		}
	}
}

void dequeue() {
	struct Node *temp = front;
	if(front == NULL || rear == NULL) {
		printf("\nQueue is Empty");
	} else {
		printf("\nThe deleted element is %d", temp->data);
		front = front->next;
		free(temp);
	}
}