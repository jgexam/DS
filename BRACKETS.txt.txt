#include<string.h>
#include<conio.h>
#include<stdio.h>
#include<stdlib.h>

void push(char);
int pop(char);
int isMatch(char);

struct Node {
	char data;
	struct Node *next;
};
struct Node *top = NULL;

void main() {
	int i, success = 1;
	char exp[100];
	clrscr();
	gets(exp);
	for(i=0; i<strlen(exp); i++) {
		if(exp[i] == '{' || exp[i] == '(' || exp[i] == '[') {
			push(exp[i]);
		}
		else if(exp[i] == '}' || exp[i] == ')' || exp[i] == ']') {
			if(pop(exp[i]) == -1) {
				success = 0;
				break;
			}
		}
		else {
			success = 0;
			break;
		}
	}
	if(success == 1 && top == NULL) {
		printf("Valid\n");
	} else {
		printf("Invalid\n");
	}
	getch();
}

void push(char bracket) {
	struct Node *n1;
	n1 = (struct Node *) malloc(sizeof(struct Node));
	n1->data = bracket;
	n1->next = NULL;
	if(top == NULL) {
		top = n1;
	}
	else {
		n1->next = top;
		top = n1;
	}
}

int pop(char bracket) {
	int match = 0;
	struct Node *temp;
	if(bracket == ')') {
		match = isMatch('(');
	}
	else if(bracket == '}') {
		match = isMatch('{');
	}
	else {
		match = isMatch('[');
	}
	if(match == 1) {
		temp = top;
		top = top->next;
		free(temp);
		return 1;
	}
	else {
		return -1;
	}
}

int isMatch(char bracket) {
	if(top->data == bracket) {
		return 1;
	}
	return 0;
}